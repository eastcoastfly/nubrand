(()=>{"use strict";const e=window.wp.element,t=window.wp.i18n,n=window.wp.editPost,r=window.wp.components,o=window.wp.coreData,l=window.wp.data,s=window.wp.plugins,a=window.lodash;const i=e=>{const t=(0,l.select)("core/editor").getCurrentPostType(),[n,r]=(0,o.useEntityProp)("postType",t,"meta");var s;void 0!==n&&(s=function(e){try{const t=JSON.parse(e);if(t&&"object"==typeof t)return!0}catch(e){}return!1}(n[e])?JSON.parse(n[e]):n[e]);return[s,t=>{(0,a.isObject)(t)&&(t=JSON.stringify(t)),r({...n,[e]:t})}]},{Fill:c,Slot:p}=(0,r.createSlotFill)("DocumentSettingsSlotFill"),m=t=>{let{children:n,className:o}=t;return(0,e.createElement)(c,null,(0,e.createElement)(r.PanelRow,{className:o},n))};m.Slot=p;const u=m;(0,s.registerPlugin)("blockmeister-pattern-builder-document-settings-panel",{render:function(){const s=(0,l.select)("core/editor").getCurrentPostType();if("blockmeister_pattern"!==s)return null;(0,l.dispatch)("core/edit-post").removeEditorPanel("post-excerpt"),(0,l.dispatch)("core/edit-post").removeEditorPanel("template");const a=(0,t.__)("Settings","blockmeister"),c="blockmeister-settings",[p,m]=(0,o.useEntityProp)("postType",s,"title"),[d,w]=(0,o.useEntityProp)("postType",s,"slug"),[b,g]=(0,o.useEntityProp)("postType",s,"excerpt"),[h,k]=i("_bm_viewport_width");return(0,e.createElement)(n.PluginDocumentSettingPanel,{name:c,title:a,className:c},(0,e.createElement)(r.TextControl,{label:(0,t.__)("Name","blockmeister"),value:p,onBlur:()=>m(p.toLowerCase().replace(/(?:^|\s|-)\S/g,(e=>e.toUpperCase()))),onChange:e=>m(e)}),(0,e.createElement)(r.TextControl,{label:(0,t.__)("Slug (internal name)","blockmeister"),value:d,onChange:e=>w(e),maxLength:20,help:(0,t.__)("Max. 20 lowercase alphanumeric characters, dashes or underscores.","blockmeister")}),(0,e.createElement)(r.TextareaControl,{label:(0,t.__)("Description (for screen readers)","blockmeister"),value:b,rows:2,onChange:e=>g(e)}),(0,e.createElement)(r.RangeControl,{label:(0,t.__)("Viewport width","blockmeister"),value:h,min:200,max:1600,step:200,resetFallbackValue:1e3,allowReset:!0,onChange:k,help:(0,t.__)("Base width used for scaling down the preview.","blockmeister")}),(0,e.createElement)(u.Slot,null,(t=>(0,e.createElement)(e.Fragment,null,t))))},icon:null});const d=window.wp.blocks;(0,s.registerPlugin)("blockmeister-add-to-block-patterns-settings-menu-item",{render:()=>{const[o,s]=(0,e.useState)(!1),[a,i]=(0,e.useState)(""),[c,p]=(0,e.useState)(!1),{createSuccessNotice:m}=(0,l.useDispatch)("core/notices");return(0,e.createElement)(e.Fragment,null,o?(0,e.createElement)(r.Modal,{title:(0,t.__)("New pattern settings","blockmeister"),onRequestClose:()=>s(!1)},(0,e.createElement)(r.TextControl,{label:(0,t.__)("Pattern name","blockmeister"),value:a,onChange:i}),(0,e.createElement)(r.Button,{isPrimary:!0,isPressed:c,isBusy:c,onClick:()=>{p(!0);const e=(()=>{const{getSelectedBlockCount:e,getSelectedBlock:t,getMultiSelectedBlocks:n}=(0,l.select)("core/block-editor");return 1===e()?t():n()})(),n=(0,d.serialize)(e);wp.apiRequest({path:"wp/v2/blockmeister_pattern",method:"POST",data:{title:a,content:n,status:"publish"}}).then((e=>{p(!1),s(!1),i(""),
/* translators: placeholder will be replaced by the name of the pattern that was created */
m((0,t.sprintf)((0,t.__)("Pattern '%s' created.","blockmeister"),a),{type:"snackbar"})}))}},(0,t.__)("Create Pattern","blockmeister")),(0,e.createElement)("p",{style:{fontWeight:"bold",marginTop:"3em"}},(0,t.__)("Note: after the pattern has been created, you'll need to reload the page to make the pattern visible in the inserter.","blockmeister"))):(0,e.createElement)(n.PluginBlockSettingsMenuItem,{icon:"no-icon",label:(0,t.__)("Add to Block patterns","blockmeister"),onClick:()=>s(!0)}))}})})();